<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_meeple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
//stats
num_options = 2
wood = false
spd = 20
default_spd = 15
road_spd = 5

image_speed = 0

//state machine
state = "rng"
return_state = "road"
timer = 0
log = noone
conception_time = room_speed*2
dist = 0
notifycation = noone


move_snap(16,16)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.people_killed ++
global.num_meeple --
audio_play_sound(snd_dead,1,false)
instance_create(x,y,obj_corpse)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
    case "rng":
        num_options = 2
        if(global.num_houses &gt; global.num_meeple*4)
            num_options++
        var rng = irandom_range(1,num_options);
        switch(rng)
        {
            case 1:
                state = "road"
            break
            
            case 2:
                if(global.num_roads &gt; global.num_houses*1.5)
                    state = "tree"
                else
                    state = "road"
            break
            
            case 3:
                state = "babies"
            break
        }
        
    break
    
    case "road":
        state = "move"
        target = noone
        dist = 100000;
        with(obj_road)
        {
            if(next == noone &amp;&amp; taken == false &amp;&amp; distance_to_point(other.x,other.y) &lt; other.dist)
            {
                other.target = id
                taken = true
                other.dist = distance_to_point(other.x,other.y)
            }
        }
        return_state = "create_road"
    break
    
    case "create_road":
        var dir = irandom_range(1,4)
        for(i = 0; i &lt; 4; i++)
        {
            var inst = instance_place(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),all);
            if(inst == noone)
            {
                road = instance_create(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),obj_road)
                target.next = road
                target.taken = false
                audio_play_sound(snd_road,1,false)
                break
            }
            else
            {
                if(inst.object_index == obj_tree)
                {
                    instance_destroy(inst)   
                    road = instance_create(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),obj_road)
                    if(instance_exists(road))
                        target.next = road
                    audio_play_sound(snd_road,1,false)
                    break                
                }
            }
        }  
        state = "return" 
    break
    
    case "tree":
        state = "move"
        target = instance_nearest(x,y,obj_tree)
        return_state = "chop_tree"
    break
    
    case "babies":
        if(ds_list_size(global.baby_list) &gt; 0)
        {
            state = "move"
            global.num_meeple ++
            target = ds_list_find_value(global.baby_list,0)
            return_state = "make_baby"
            ds_list_delete(global.baby_list,0)
        }
        else
        {
            ds_list_add(global.baby_list,id)
            state = "waiting"
        }
    break
    
    case "waiting":
        image_index = 1
    break
    
    case "make_baby":
        if(place_meeting(x,y,target))
        {
            timer ++
            if(notifycation == noone)
            {
                notifycation = instance_create(x,y,obj_notify)
                audio_play_sound(snd_baby2,1,false)
            }
            if(timer &gt;= conception_time)
            {
                instance_create(x,y,obj_meeple)
                audio_play_sound(snd_baby,1,false)
                state = "return" 
                target.state = "return" 
                notifycation = noone
            }
        }
        else
        {
            state = "move"
        }
    break
    
    case "move":
        if(instance_exists(target))
        {            
            timer ++
            //move to location
            if(timer &gt;= spd)
            {
                instance_create(x,y,obj_dust)
                x += lengthdir_x(16,point_direction(x,y,target.x,target.y))
                y += lengthdir_y(16,point_direction(x,y,target.x,target.y))
                move_snap(16,16)
                timer = 0
            }
        
        //reached location

            if(place_meeting(x,y,target))
            {
                state = return_state
                if(instance_exists(log))
                    instance_destroy(log)
                timer = 0
            }
        }
        else
        {
            target = instance_nearest(x,y,obj_tree)
        }
    break
    
    case "chop_tree":
        if(place_meeting(x,y,target))
        {
            instance_destroy(target)
            log = instance_create(x,y,obj_log)
            log.prnt = id
            state = "move"
            target = noone
            dist = 100000;
            with(obj_road)
            {
                if(full == false &amp;&amp; !taken &amp;&amp; other.target == noone &amp;&amp; distance_to_point(other.x,other.y) &lt; other.dist)
                {    
                    other.target = id
                    taken = true
                    other.dist = distance_to_point(other.x,other.y)
                }
            }
            return_state = "create_house"
        }
        else
        {
            state = "move"
        }
    break
    
    case "create_house":
        var dir = irandom_range(1,4);
        if(instance_exists(target))
            target.taken = false
        for(i = 0; i &lt; 4; i++)
        {
            var inst = instance_place(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),all);
            if(inst == noone)
            { 
                instance_create(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),obj_house)
                instance_destroy(log)
                break
            }
            else
            {
                if(inst.object_index == obj_tree)
                {
                    instance_destroy(inst)
                    instance_destroy(log)
                    instance_create(x+lengthdir_x(16,(i+dir)*90),y+lengthdir_y(16,(i+dir)*90),obj_house)
                    break
                }
            }
        }
        state = "return"
    break
    
    case "return":
        image_index = 0
        state = "move"
        target = obj_townhall
        return_state = "rng"
    break
}

if(place_meeting(x,y,obj_road))
    spd = road_spd
else
    spd = default_spd

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_earthquake_area">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x,y,obj_road))
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_destroy_area_meteor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
